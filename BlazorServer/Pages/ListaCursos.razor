@page "/listaCursos"
@using BlazorServer.Servicios;
@using ModeloClasesAlumnos;

@inject IServicioCurso ServicioCurso
@inject NavigationManager navigationManager
@inject SweetAlertService Swal

<h3>ListaCursos</h3>

<div class="form-group row">
    <div class="col-sm-10">
        <a href="/NuevoCurso" class="btn btn-primary m-1">Nuevo Curso</a>
    </div>
</div>

@if (listaCursos == null)
{
    <div class="spinner"></div>
}
else if (listaCursos.Count == 0)
{
    <p class="text-danger">No hay cursos disponibles</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre Curso</th>
                <th>Coste</th>
                <th>FechaInicio Precio</th>
                <th>FechaFin Precio</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Curso c in listaCursos)
            {
                foreach (Precio p in c.ListaPrecios)
                {
                    <tr>
                        <td>@c.NombreCurso</td>
                        <td>$ @p.Coste</td>
                        <td>@p.FechaInicio.ToString("dd/MM/yyyy")</td>
                        <td>@p.FechaFin.ToString("dd/MM/yyyy")</td>
                        <td><a href="@($"ModificarCurso/{c.Id}/{p.Id}")" class="btn btn-primary m-1">Modificar</a></td>
                        <td><input type="submit" class="btn btn-danger m-1" value="Eliminar" @onclick="( ()=>Borrar(c.Id))" /></td>
                    </tr>
                 }
            }
        </tbody>
    </table>
}

@* @if (MostrarPopUp)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog ">
            <div class="modal-content ">
                <div class="modal-header bg-light">
                    <h3 class="text-danger">Dar de baja curso</h3>
                    <button type="button" class="close"
                            @onclick="CerrarPop">
                        <span aria-hidden="true">X</span>
                    </button>
                </div>

                <div class="modal-body bg-light">
                    <strong class="text-danger">Va dar de baja este curso.Si esta seguro continue.Si no cierre esta ventana.</strong>
                    <br /><br />
                    <button type="button" class="btn btn-danger"
                            @onclick="(() => DarDeBaja(idCursoBorrar))">
                        Dar de baja
                    </button>
                </div>
            </div>
        </div>
    </div>
} *@


@code
{
    public List<Curso> listaCursos { get; set; } = new List<Curso>();
    public Boolean MostrarPopUp = false;
    public int idCursoBorrar = -1;

    // pasando -1 nos devuelve todos los cursos
    protected override async Task OnInitializedAsync()
    {
        listaCursos = (await ServicioCurso.ObtenerCursos(-1)).ToList();
    }

    protected async Task Borrar(int curso)
    {
        var respuesta = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmacion",
                Text = "Desea eliminar ?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si ok",
                CancelButtonText = "No, mejor no..."
            });
        if (!string.IsNullOrEmpty(respuesta.Value))
        {
            DarDeBaja(curso);
        }
        // idCursoBorrar = curso;
        // MostrarPopUp = true;
    }

    protected void CerrarPop()
    {
        MostrarPopUp = false;
    }

    protected async void DarDeBaja (int idCursoBorrar)
    {
        try
        {
            await ServicioCurso.BorrarCurso(idCursoBorrar);
            CerrarPop();
            navigationManager.NavigateTo("listacursos", true);
        }
        catch (Exception ex)
        {
            throw new Exception(ex.Message);
        }
    }


}





